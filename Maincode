import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;

// --- Database Connection Utility ---
class DBConnection {
    public static Connection getConnection() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            return DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "password");
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    // Create table if not exists
    public static void initializeDatabase() {
        String createTableSQL = """
            CREATE TABLE IF NOT EXISTS books (
                id INT AUTO_INCREMENT PRIMARY KEY,
                title VARCHAR(100) NOT NULL,
                author VARCHAR(100) NOT NULL
            );
        """;
        try (Connection con = getConnection();
             Statement stmt = con.createStatement()) {
            stmt.execute(createTableSQL);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

// --- Book Model ---
class Book {
    private int id;
    private String title, author;

    public Book(int id, String title, String author) {
        this.id = id;
        this.title = title;
        this.author = author;
    }

    public int getId() { return id; }
    public String getTitle() { return title; }
    public String getAuthor() { return author; }
}

// --- Book DAO ---
class BookDAO {
    public static void addBook(String title, String author) {
        try (Connection con = DBConnection.getConnection();
             PreparedStatement ps = con.prepareStatement("INSERT INTO books (title, author) VALUES (?, ?)");) {
            ps.setString(1, title);
            ps.setString(2, author);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Book added successfully.");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }
}

// --- Main GUI ---
public class MainFrame extends JFrame {
    JTextField titleField, authorField;

    public MainFrame() {
        setTitle("Library Management System");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        JLabel titleLabel = new JLabel("Title:");
        titleField = new JTextField(20);
        JLabel authorLabel = new JLabel("Author:");
        authorField = new JTextField(20);
        JButton addButton = new JButton("Add Book");

        addButton.addActionListener(e -> {
            String title = titleField.getText();
            String author = authorField.getText();
            if (!title.isEmpty() && !author.isEmpty()) {
                BookDAO.addBook(title, author);
            } else {
                JOptionPane.showMessageDialog(this, "Please fill all fields.");
            }
        });

        setLayout(new GridLayout(4, 2, 10, 10));
        add(titleLabel); add(titleField);
        add(authorLabel); add(authorField);
        add(new JLabel()); add(addButton);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            DBConnection.initializeDatabase(); // Ensure table is created
            new MainFrame().setVisible(true);
        });
    }
}
